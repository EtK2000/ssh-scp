# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ 9, 11, 17 ]

    name: Java ${{ matrix.java }}

    steps:

      # Fetch the latest code
      - uses: actions/checkout@v3

      # Setup JDKs that are supported
      - name: Setup JDK ${{ matrix.java }}
        if: matrix.java != 9
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: maven

      # Setup JDK 9
      - name: Download JDK ${{ matrix.java }}
        if: matrix.java == 9
        run: wget -O $RUNNER_TEMP/java_package.tar.gz "https://github.com/AdoptOpenJDK/openjdk9-binaries/releases/download/jdk-9%2B181/OpenJDK9U-jdk_x64_linux_hotspot_9_181.tar.gz"
      - name: Setup JDK ${{ matrix.java }}
        if: matrix.java == 9
        uses: actions/setup-java@v2
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: '9.0.4'
          architecture: x64
          cache: maven

      # Most importantly; check that it compiles
      - name: Build with Maven
        if: matrix.java != 9
        run: mvn compile
      - name: Build with Maven
        if: matrix.java == 9
        run: mvn compile -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true